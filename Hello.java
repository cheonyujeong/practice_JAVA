package sec06.exam01;

public class Hello {
	public static void main(String[] args)
	{
		System.out.println("Hello, welcome to java world!");
	}
}

/* -----------------------------------------------------------------------------------------------------------
1. 자바 특징
- 이식성이 높은 언어이다. 
	- 여러 운영체제에서 실행 가능
- 객체 지향 언어이다.
	- 객체 지향 프로그래밍 : 부품에 해당하는 객체들을 먼저 만들고, 이것들을 하나씩 조립 및 연결해서 전체 프로그램을 완성하는 기법
- 함수적 스타일 코딩을 지원한다.
	- JAVA8 부터 람다식 지원
	- 람다식을 사용하면 컬렉션의 요소를 필터링, 매핑, 집계 처리하는데 쉬워지고, 코드가 매우 간결해짐
- 메모리를 자동으로 관리한다.
	- 객체 생성 시 자동적으로 메모리 영역을 찾아서 할당하고, 사용이 완료되면 Garbage Collector를 실행시켜 자동적으로 사용하지 않는 객체 제거
- 다양한 애플리케이션을 개발할 수 있다.
- 멀티 스레드를 쉽게 구현할 수 있다.
- 동적 로딩을 지원한다.
	- 애플리케이션이 실행될 때 모든 객체가 생성되지 않고, 객체가 필요한 시점에 클래스를 동적 로딩해서 객체를 생성한다.
	- 유지보수가 발생하더라도 해당 클래스만 수정하면 되므로 전체 애플리케이션을 다시 컴파일할 필요 없음
- 막강한 오픈소스 라이브러리가 풍부하다.

2. JVM (자바 가상 기계)
- 운영체제는 자바 프로그램을 바로 실행할 수 없음, 자바 프로그램은 완전한 기계어가 아니라 중간 단계의 바이트 코드이기 때문에 이것을 해석하고 실행할 수 
있는 가상의 운영체제 필요
- 바이트 코드는 JVM에 독립적이지만, JVM은 운영체제에 종속적이다.
- 바이트 코드를 기계어로 변환시키고 실행한다.

3. 자바 프로그램 개발 순서
- .java 소스 파일 작성 -> 컴파일러(javac.exe)로 바이트 코드 파일(.class) 생성 -> JVM 구동 명령어(java.exe)로 실행
------------------------------------------------------------------------------------------------------------ */